{"version":3,"file":"static/chunks/app/page-30a7ce1c339a5e79.js","mappings":"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","sources":["webpack://_N_E/?47fd","webpack://_N_E/./components/ui/alert-dialog.tsx","webpack://_N_E/./components/ui/input-otp.tsx","webpack://_N_E/./components/PasskeyModal.tsx","webpack://_N_E/./components/forms/PatientForm.tsx"],"sourcesContent":["import(/* webpackMode: \"eager\", webpackExports: [\"PatientForm\"] */ \"C:\\\\Users\\\\Zeta\\\\Documents\\\\GitHub\\\\medwebsite\\\\components\\\\forms\\\\PatientForm.tsx\");\n;\nimport(/* webpackMode: \"eager\", webpackExports: [\"PasskeyModal\"] */ \"C:\\\\Users\\\\Zeta\\\\Documents\\\\GitHub\\\\medwebsite\\\\components\\\\PasskeyModal.tsx\");\n;\nimport(/* webpackMode: \"eager\" */ \"C:\\\\Users\\\\Zeta\\\\Documents\\\\GitHub\\\\medwebsite\\\\node_modules\\\\next\\\\dist\\\\client\\\\image-component.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"C:\\\\Users\\\\Zeta\\\\Documents\\\\GitHub\\\\medwebsite\\\\node_modules\\\\next\\\\dist\\\\client\\\\link.js\");\n","\"use client\";\r\n\r\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\";\r\nimport * as React from \"react\";\r\n\r\nimport { buttonVariants } from \"@/components/ui/button\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst AlertDialog = AlertDialogPrimitive.Root;\r\n\r\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger;\r\n\r\nconst AlertDialogPortal = AlertDialogPrimitive.Portal;\r\n\r\nconst AlertDialogOverlay = React.forwardRef<\r\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\r\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\r\n>(({ className, ...props }, ref) => (\r\n  <AlertDialogPrimitive.Overlay\r\n    className={cn(\r\n      \"fixed inset-0 z-50 bg-black/80 backdrop-blur-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n    ref={ref}\r\n  />\r\n));\r\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName;\r\n\r\nconst AlertDialogContent = React.forwardRef<\r\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\r\n>(({ className, ...props }, ref) => (\r\n  <AlertDialogPortal>\r\n    <AlertDialogOverlay />\r\n    <AlertDialogPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border border-slate-200 bg-white p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg dark:border-slate-800 dark:bg-slate-950\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  </AlertDialogPortal>\r\n));\r\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName;\r\n\r\nconst AlertDialogHeader = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col space-y-2 text-center sm:text-left\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n);\r\nAlertDialogHeader.displayName = \"AlertDialogHeader\";\r\n\r\nconst AlertDialogFooter = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n);\r\nAlertDialogFooter.displayName = \"AlertDialogFooter\";\r\n\r\nconst AlertDialogTitle = React.forwardRef<\r\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\r\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\r\n>(({ className, ...props }, ref) => (\r\n  <AlertDialogPrimitive.Title\r\n    ref={ref}\r\n    className={cn(\"text-lg font-semibold\", className)}\r\n    {...props}\r\n  />\r\n));\r\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName;\r\n\r\nconst AlertDialogDescription = React.forwardRef<\r\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\r\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\r\n>(({ className, ...props }, ref) => (\r\n  <AlertDialogPrimitive.Description\r\n    ref={ref}\r\n    className={cn(\"text-sm text-slate-500 dark:text-slate-400\", className)}\r\n    {...props}\r\n  />\r\n));\r\nAlertDialogDescription.displayName =\r\n  AlertDialogPrimitive.Description.displayName;\r\n\r\nconst AlertDialogAction = React.forwardRef<\r\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\r\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\r\n>(({ className, ...props }, ref) => (\r\n  <AlertDialogPrimitive.Action\r\n    ref={ref}\r\n    className={cn(buttonVariants(), className)}\r\n    {...props}\r\n  />\r\n));\r\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName;\r\n\r\nconst AlertDialogCancel = React.forwardRef<\r\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\r\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\r\n>(({ className, ...props }, ref) => (\r\n  <AlertDialogPrimitive.Cancel\r\n    ref={ref}\r\n    className={cn(\r\n      buttonVariants({ variant: \"outline\" }),\r\n      \"mt-2 sm:mt-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName;\r\n\r\nexport {\r\n  AlertDialog,\r\n  AlertDialogPortal,\r\n  AlertDialogOverlay,\r\n  AlertDialogTrigger,\r\n  AlertDialogContent,\r\n  AlertDialogHeader,\r\n  AlertDialogFooter,\r\n  AlertDialogTitle,\r\n  AlertDialogDescription,\r\n  AlertDialogAction,\r\n  AlertDialogCancel,\r\n};\r\n","\"use client\";\r\n\r\nimport { OTPInput, OTPInputContext } from \"input-otp\";\r\nimport { Dot } from \"lucide-react\";\r\nimport * as React from \"react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst InputOTP = React.forwardRef<\r\n  React.ElementRef<typeof OTPInput>,\r\n  React.ComponentPropsWithoutRef<typeof OTPInput>\r\n>(({ className, containerClassName, ...props }, ref) => (\r\n  <OTPInput\r\n    ref={ref}\r\n    containerClassName={cn(\r\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\r\n      containerClassName\r\n    )}\r\n    className={cn(\"disabled:cursor-not-allowed\", className)}\r\n    {...props}\r\n  />\r\n));\r\nInputOTP.displayName = \"InputOTP\";\r\n\r\nconst InputOTPGroup = React.forwardRef<\r\n  React.ElementRef<\"div\">,\r\n  React.ComponentPropsWithoutRef<\"div\">\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\r\n));\r\nInputOTPGroup.displayName = \"InputOTPGroup\";\r\n\r\nconst InputOTPSlot = React.forwardRef<\r\n  React.ElementRef<\"div\">,\r\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\r\n>(({ index, className, ...props }, ref) => {\r\n  const inputOTPContext = React.useContext(OTPInputContext);\r\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index];\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className={cn(\r\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-slate-200 text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md dark:border-slate-800\",\r\n        isActive &&\r\n          \"z-10 ring-2 ring-slate-950 ring-offset-white dark:ring-slate-300 dark:ring-offset-slate-950\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {char}\r\n      {hasFakeCaret && (\r\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\r\n          <div className=\"h-4 w-px animate-caret-blink bg-slate-950 duration-1000 dark:bg-slate-50\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\nInputOTPSlot.displayName = \"InputOTPSlot\";\r\n\r\nconst InputOTPSeparator = React.forwardRef<\r\n  React.ElementRef<\"div\">,\r\n  React.ComponentPropsWithoutRef<\"div\">\r\n>(({ ...props }, ref) => (\r\n  <div ref={ref} role=\"separator\" {...props}>\r\n    <Dot />\r\n  </div>\r\n));\r\nInputOTPSeparator.displayName = \"InputOTPSeparator\";\r\n\r\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator };\r\n","\"use client\";\r\n\r\nimport Image from \"next/image\";\r\nimport { usePathname, useRouter } from \"next/navigation\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  AlertDialog,\r\n  AlertDialogAction,\r\n  AlertDialogContent,\r\n  AlertDialogDescription,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogTitle,\r\n} from \"@/components/ui/alert-dialog\";\r\nimport {\r\n  InputOTP,\r\n  InputOTPGroup,\r\n  InputOTPSlot,\r\n} from \"@/components/ui/input-otp\";\r\nimport { decryptKey, encryptKey } from \"@/lib/utils\";\r\n\r\nexport const PasskeyModal = () => {\r\n  const router = useRouter();\r\n  const path = usePathname();\r\n  const [open, setOpen] = useState(false);\r\n  const [passkey, setPasskey] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const encryptedKey =\r\n    typeof window !== \"undefined\"\r\n      ? window.localStorage.getItem(\"accessKey\")\r\n      : null;\r\n\r\n  useEffect(() => {\r\n    const accessKey = encryptedKey && decryptKey(encryptedKey);\r\n\r\n    if (path)\r\n      if (accessKey === process.env.NEXT_PUBLIC_ADMIN_PASSKEY!.toString()) {\r\n        setOpen(false);\r\n        router.push(\"/admin\");\r\n      } else {\r\n        setOpen(true);\r\n      }\r\n  }, [encryptedKey]);\r\n\r\n  const closeModal = () => {\r\n    setOpen(false);\r\n    router.push(\"/\");\r\n  };\r\n\r\n  const validatePasskey = (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ) => {\r\n    e.preventDefault();\r\n\r\n    if (passkey === process.env.NEXT_PUBLIC_ADMIN_PASSKEY) {\r\n      const encryptedKey = encryptKey(passkey);\r\n\r\n      localStorage.setItem(\"accessKey\", encryptedKey);\r\n\r\n      setOpen(false);\r\n    } else {\r\n      setError(\"Invalid passkey. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AlertDialog open={open} onOpenChange={setOpen}>\r\n      <AlertDialogContent className=\"shad-alert-dialog\">\r\n        <AlertDialogHeader>\r\n          <AlertDialogTitle className=\"flex items-start justify-between\">\r\n            Admin Access Verification\r\n            <Image\r\n              src=\"/assets/icons/close.svg\"\r\n              alt=\"close\"\r\n              width={20}\r\n              height={20}\r\n              onClick={() => closeModal()}\r\n              className=\"cursor-pointer\"\r\n            />\r\n          </AlertDialogTitle>\r\n          <AlertDialogDescription>\r\n            To access the admin page, please enter the passkey.\r\n          </AlertDialogDescription>\r\n        </AlertDialogHeader>\r\n        <div>\r\n          <InputOTP\r\n            maxLength={6}\r\n            value={passkey}\r\n            onChange={(value) => setPasskey(value)}\r\n          >\r\n            <InputOTPGroup className=\"shad-otp\">\r\n              <InputOTPSlot className=\"shad-otp-slot\" index={0} />\r\n              <InputOTPSlot className=\"shad-otp-slot\" index={1} />\r\n              <InputOTPSlot className=\"shad-otp-slot\" index={2} />\r\n              <InputOTPSlot className=\"shad-otp-slot\" index={3} />\r\n              <InputOTPSlot className=\"shad-otp-slot\" index={4} />\r\n              <InputOTPSlot className=\"shad-otp-slot\" index={5} />\r\n            </InputOTPGroup>\r\n          </InputOTP>\r\n\r\n          {error && (\r\n            <p className=\"shad-error text-14-regular mt-4 flex justify-center\">\r\n              {error}\r\n            </p>\r\n          )}\r\n        </div>\r\n        <AlertDialogFooter>\r\n          <AlertDialogAction\r\n            onClick={(e) => validatePasskey(e)}\r\n            className=\"shad-primary-btn w-full\"\r\n          >\r\n            Enter Admin Passkey\r\n          </AlertDialogAction>\r\n        </AlertDialogFooter>\r\n      </AlertDialogContent>\r\n    </AlertDialog>\r\n  );\r\n};\r\n","\"use client\";\r\n\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { z } from \"zod\";\r\n\r\nimport { Form } from \"@/components/ui/form\";\r\nimport { createUser } from \"@/lib/actions/patient.actions\";\r\nimport { UserFormValidation } from \"@/lib/validation\";\r\n\r\nimport \"react-phone-number-input/style.css\";\r\nimport CustomFormField, { FormFieldType } from \"../CustomFormField\";\r\nimport SubmitButton from \"../SubmitButton\";\r\n\r\nexport const PatientForm = () => {\r\n  const router = useRouter();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const form = useForm<z.infer<typeof UserFormValidation>>({\r\n    resolver: zodResolver(UserFormValidation),\r\n    defaultValues: {\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n    },\r\n  });\r\n\r\n  const onSubmit = async (values: z.infer<typeof UserFormValidation>) => {\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const user = {\r\n        name: values.name,\r\n        email: values.email,\r\n        phone: values.phone,\r\n      };\r\n\r\n      const newUser = await createUser(user);\r\n\r\n      if (newUser) {\r\n        router.push(`/patients/${newUser.$id}/register`);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Form {...form}>\r\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"flex-1 space-y-6\">\r\n        <section className=\"mb-12 space-y-4\">\r\n          <h1 className=\"header\">Hi there 👋</h1>\r\n          <p className=\"text-dark-700\">Get started with appointments.</p>\r\n        </section>\r\n\r\n        <CustomFormField\r\n          fieldType={FormFieldType.INPUT}\r\n          control={form.control}\r\n          name=\"name\"\r\n          label=\"Full name\"\r\n          placeholder=\"John Doe\"\r\n          iconSrc=\"/assets/icons/user.svg\"\r\n          iconAlt=\"user\"\r\n        />\r\n\r\n        <CustomFormField\r\n          fieldType={FormFieldType.INPUT}\r\n          control={form.control}\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          placeholder=\"johndoe@gmail.com\"\r\n          iconSrc=\"/assets/icons/email.svg\"\r\n          iconAlt=\"email\"\r\n        />\r\n\r\n        <CustomFormField\r\n          fieldType={FormFieldType.PHONE_INPUT}\r\n          control={form.control}\r\n          name=\"phone\"\r\n          label=\"Phone number\"\r\n          placeholder=\"(555) 123-4567\"\r\n        />\r\n\r\n        <SubmitButton isLoading={isLoading}>Get Started</SubmitButton>\r\n      </form>\r\n    </Form>\r\n  );\r\n};\r\n"],"names":["Promise","resolve","then","__webpack_require__","bind","t","AlertDialog","AlertDialogPrimitive","AlertDialogPortal","AlertDialogOverlay","React","param","ref","className","props","jsx_runtime","jsx","cn","displayName","AlertDialogContent","jsxs","AlertDialogHeader","div","AlertDialogFooter","AlertDialogTitle","AlertDialogDescription","AlertDialogAction","buttonVariants","AlertDialogCancel","variant","InputOTP","containerClassName","OTPInput","InputOTPGroup","InputOTPSlot","index","char","hasFakeCaret","isActive","inputOTPContext","OTPInputContext","slots","InputOTPSeparator","role","Dot","PasskeyModal","router","useRouter","path","usePathname","open","setOpen","useState","passkey","setPasskey","error","setError","encryptedKey","window","localStorage","getItem","useEffect","accessKey","decryptKey","process","env","NEXT_PUBLIC_ADMIN_PASSKEY","toString","push","closeModal","validatePasskey","e","preventDefault","encryptKey","setItem","onOpenChange","Image","src","alt","width","height","onClick","maxLength","value","onChange","p","PatientForm","isLoading","setIsLoading","form","useForm","resolver","zodResolver","UserFormValidation","defaultValues","name","email","phone","onSubmit","values","user","newUser","createUser","concat","$id","console","log","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","Form","handleSubmit","section","h1","CustomFormField","fieldType","FormFieldType","INPUT","control","label","placeholder","iconSrc","iconAlt","PHONE_INPUT","SubmitButton"],"sourceRoot":""}