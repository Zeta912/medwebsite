{"version":3,"file":"static/chunks/app/patients/[userId]/new-appointment/page-04d2ccf9c7efe680.js","mappings":"qaAAAA,QAAAC,OAAA,GAAAC,IAAA,CAAAC,EAAAC,IAAA,CAAAD,EAAA,QAEAH,QAAAC,OAAA,GAAAC,IAAA,CAAAC,EAAAE,CAAA,CAAAD,IAAA,CAAAD,EAAA,yhBCsBO,IAAMG,EAAkB,QA8FzBC,EA9F0B,CAC9BC,OAAAA,CAAM,CACNC,UAAAA,CAAS,CACTC,KAAAA,EAAO,QAAQ,CACfC,YAAAA,CAAW,CACXC,QAAAA,CAAO,CAOR,CAAAC,EACOC,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,IACT,CAACC,EAAWC,EAAa,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IAErCC,EAA4BC,CAAAA,EAAAA,EAAAA,EAAAA,EAAqBV,GAEjDW,EAAOC,CAAAA,EAAAA,EAAAA,EAAAA,EAAmD,CAC9DC,SAAUC,CAAAA,EAAAA,EAAAA,CAAAA,EAAYL,GACtBM,cAAe,CACbC,iBAAkBf,EAAcA,MAAAA,EAAAA,KAAAA,EAAAA,EAAae,gBAAgB,CAAG,GAChEC,QAAAA,KACQC,KADEjB,EACGA,MAAAA,EAAAA,KAAAA,EAAAA,EAAagB,QAAQ,CACrBC,KAAKC,GAAG,IACrBC,OAAQnB,EAAcA,EAAYmB,MAAM,CAAG,GAC3CC,KAAMpB,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAaoB,IAAI,GAAI,GAC3BC,mBAAoBrB,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAaqB,kBAAkB,GAAI,EACzD,CACF,GAEMC,EAAW,MACfC,QAIIC,EACJ,OAHAlB,EAAa,IAGLP,GACN,IAAK,WACHyB,EAAS,YACT,KACF,KAAK,SACHA,EAAS,YACT,KACF,SACEA,EAAS,SACb,CAEA,GAAI,CACF,GAAIzB,WAAAA,GAAqBD,EAAW,CAClC,IAAME,EAAc,CAClBH,OAAAA,EACA4B,QAAS3B,EACTiB,iBAAkBQ,EAAOR,gBAAgB,CACzCC,SAAU,IAAIC,KAAKM,EAAOP,QAAQ,EAClCG,OAAQI,EAAOJ,MAAM,CACrBK,OAAQA,EACRJ,KAAMG,EAAOH,IAAI,EAGbM,EAAiB,MAAMC,EAAkB3B,GAE3C0B,IACFhB,EAAKkB,KAAK,GACVzB,EAAO0B,IAAI,CACT,aAA6DH,MAAAA,CAAhD7B,EAAO,2CAA4DiC,MAAA,CAAnBJ,EAAeK,GAAG,GAGrF,KAAO,CACL,IAAMC,EAAsB,CAC1BnC,OAAAA,EACAoC,cAAejC,MAAAA,EAAAA,KAAAA,EAAAA,EAAa+B,GAAG,CAC/B/B,YAAa,CACXe,iBAAkBQ,EAAOR,gBAAgB,CACzCC,SAAU,IAAIC,KAAKM,EAAOP,QAAQ,EAClCQ,OAAQA,EACRH,mBAAoBE,EAAOF,kBAAkB,EAE/CtB,KAAAA,CACF,CAE2B,OAAMmC,EAAkBF,KAGjD/B,GAAWA,EAAQ,IACnBS,EAAKkB,KAAK,GAEd,CACF,CAAE,MAAOO,EAAO,CACdC,QAAQC,GAAG,CAACF,EACd,CACA7B,EAAa,GACf,EAGA,OAAQP,GACN,IAAK,SACHH,EAAc,qBACd,KACF,KAAK,WACHA,EAAc,uBACd,KACF,SACEA,EAAc,qBAClB,CAEA,MACE,GAAA0C,EAAAC,GAAA,EAACC,EAAAA,EAAIA,CAAAA,CAAE,GAAG9B,CAAI,UACZ,GAAA4B,EAAAG,IAAA,EAAC/B,OAAAA,CAAKY,SAAUZ,EAAKgC,YAAY,CAACpB,GAAWqB,UAAU,6BACpD5C,WAAAA,GACC,GAAAuC,EAAAG,IAAA,EAACG,UAAAA,CAAQD,UAAU,4BACjB,GAAAL,EAAAC,GAAA,EAACM,KAAAA,CAAGF,UAAU,kBAAS,oBACvB,GAAAL,EAAAC,GAAA,EAACO,IAAAA,CAAEH,UAAU,yBAAgB,gDAMhC5C,WAAAA,GACC,GAAAuC,EAAAG,IAAA,EAAAH,EAAAS,QAAA,YACE,GAAAT,EAAAC,GAAA,EAACS,EAAAA,CAAeA,CAAAA,CACdC,UAAWC,EAAAA,CAAaA,CAACC,MAAM,CAC/BC,QAAS1C,EAAK0C,OAAO,CACrBC,KAAK,mBACLC,MAAM,SACNC,YAAY,2BAEXC,EAAAA,EAAOA,CAACC,GAAG,CAAC,CAACC,EAAQC,IACpB,GAAArB,EAAAC,GAAA,EAACqB,EAAAA,EAAUA,CAAAA,CAAuBC,MAAOH,EAAOL,IAAI,UAClD,GAAAf,EAAAG,IAAA,EAACqB,MAAAA,CAAInB,UAAU,mDACb,GAAAL,EAAAC,GAAA,EAACwB,EAAAA,OAAKA,CAAAA,CACJC,IAAKN,EAAOO,KAAK,CACjBC,MAAO,GACPC,OAAQ,GACRC,IAAI,SACJzB,UAAU,wCAEZ,GAAAL,EAAAC,GAAA,EAACO,IAAAA,UAAGY,EAAOL,IAAI,OATFK,EAAOL,IAAI,CAAGM,MAenC,GAAArB,EAAAC,GAAA,EAACS,EAAAA,CAAeA,CAAAA,CACdC,UAAWC,EAAAA,CAAaA,CAACmB,WAAW,CACpCjB,QAAS1C,EAAK0C,OAAO,CACrBC,KAAK,WACLC,MAAM,4BACNgB,eAAc,GACdC,WAAW,2BAGb,GAAAjC,EAAAG,IAAA,EAACqB,MAAAA,CACCnB,UAAW,wBAA2Db,MAAA,CAAnC/B,WAAAA,GAAqB,yBAExD,GAAAuC,EAAAC,GAAA,EAACS,EAAAA,CAAeA,CAAAA,CACdC,UAAWC,EAAAA,CAAaA,CAACsB,QAAQ,CACjCpB,QAAS1C,EAAK0C,OAAO,CACrBC,KAAK,SACLC,MAAM,qBACNC,YAAY,yBACZkB,SAAU1E,aAAAA,IAGZ,GAAAuC,EAAAC,GAAA,EAACS,EAAAA,CAAeA,CAAAA,CACdC,UAAWC,EAAAA,CAAaA,CAACsB,QAAQ,CACjCpB,QAAS1C,EAAK0C,OAAO,CACrBC,KAAK,OACLC,MAAM,iBACNC,YAAY,6CACZkB,SAAU1E,aAAAA,UAMjBA,WAAAA,GACC,GAAAuC,EAAAC,GAAA,EAACS,EAAAA,CAAeA,CAAAA,CACdC,UAAWC,EAAAA,CAAaA,CAACsB,QAAQ,CACjCpB,QAAS1C,EAAK0C,OAAO,CACrBC,KAAK,qBACLC,MAAM,0BACNC,YAAY,2BAIhB,GAAAjB,EAAAC,GAAA,EAACmC,EAAAA,CAAYA,CAAAA,CACXrE,UAAWA,EACXsC,UAAW,GAA8Db,MAAA,CAA3D/B,WAAAA,EAAoB,kBAAoB,mBAAmB,oBAExEH,QAKX,uKC3NO,IAAM+E,EAAgB,CAAC,OAAQ,SAAU,QAAQ,CAE3CC,EAA2B,CACtCC,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,MAAO,GACPC,UAAW,IAAIhE,KAAKA,KAAKC,GAAG,IAC5BgE,OAAQ,OACRC,QAAS,GACTC,WAAY,GACZC,qBAAsB,GACtBC,uBAAwB,GACxBvE,iBAAkB,GAClBwE,kBAAmB,GACnBC,sBAAuB,GACvBC,UAAW,GACXC,kBAAmB,GACnBC,qBAAsB,GACtBC,mBAAoB,GACpBC,mBAAoB,oBACpBC,qBAAsB,GACtBC,uBAAwB,EAAE,CAC1BC,iBAAkB,GAClBC,kBAAmB,GACnBC,eAAgB,EAClB,EAEaC,EAAsB,CACjC,oBACA,mBACA,gCACA,mBACA,yBACA,WACA,mCACA,uBACA,gBACA,kBACA,gBACD,CAEY3C,EAAU,CACrB,CACES,MAAO,8BACPZ,KAAM,YACR,EACA,CACEY,MAAO,gCACPZ,KAAM,eACR,EACA,CACEY,MAAO,mCACPZ,KAAM,kBACR,EACA,CACEY,MAAO,8BACPZ,KAAM,YACR,EACA,CACEY,MAAO,+BACPZ,KAAM,aACR,EACA,CACEY,MAAO,gCACPZ,KAAM,cACR,EACA,CACEY,MAAO,4BACPZ,KAAM,aACR,EACA,CACEY,MAAO,6BACPZ,KAAM,aACR,EACA,CACEY,MAAO,+BACPZ,KAAM,eACR,EACD,CAEY+C,EAAa,CACxBC,UAAW,0BACXC,QAAS,4BACTC,UAAW,6BACb","sources":["webpack://_N_E/?a9cb","webpack://_N_E/./components/forms/AppointmentForm.tsx","webpack://_N_E/./constants/index.ts","webpack://_N_E/./node_modules/react-datepicker/dist/react-datepicker.css"],"sourcesContent":["import(/* webpackMode: \"eager\", webpackExports: [\"AppointmentForm\"] */ \"C:\\\\Users\\\\Zeta\\\\Documents\\\\GitHub\\\\medwebsite\\\\components\\\\forms\\\\AppointmentForm.tsx\");\n;\nimport(/* webpackMode: \"eager\" */ \"C:\\\\Users\\\\Zeta\\\\Documents\\\\GitHub\\\\medwebsite\\\\node_modules\\\\next\\\\dist\\\\client\\\\image-component.js\");\n","\"use client\";\r\n\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport Image from \"next/image\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { Dispatch, SetStateAction, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { z } from \"zod\";\r\n\r\nimport { SelectItem } from \"@/components/ui/select\";\r\nimport { Doctors } from \"@/constants\";\r\nimport {\r\n  createAppointment,\r\n  updateAppointment,\r\n} from \"@/lib/actions/appointment.actions\";\r\nimport { getAppointmentSchema } from \"@/lib/validation\";\r\nimport { Appointment } from \"@/types/appwrite.types\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport CustomFormField, { FormFieldType } from \"../CustomFormField\";\r\nimport SubmitButton from \"../SubmitButton\";\r\nimport { Form } from \"../ui/form\";\r\n\r\nexport const AppointmentForm = ({\r\n  userId,\r\n  patientId,\r\n  type = \"create\",\r\n  appointment,\r\n  setOpen,\r\n}: {\r\n  userId: string;\r\n  patientId: string;\r\n  type: \"create\" | \"schedule\" | \"cancel\";\r\n  appointment?: Appointment;\r\n  setOpen?: Dispatch<SetStateAction<boolean>>;\r\n}) => {\r\n  const router = useRouter();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const AppointmentFormValidation = getAppointmentSchema(type);\r\n\r\n  const form = useForm<z.infer<typeof AppointmentFormValidation>>({\r\n    resolver: zodResolver(AppointmentFormValidation),\r\n    defaultValues: {\r\n      primaryPhysician: appointment ? appointment?.primaryPhysician : \"\",\r\n      schedule: appointment\r\n        ? new Date(appointment?.schedule!)\r\n        : new Date(Date.now()),\r\n      reason: appointment ? appointment.reason : \"\",\r\n      note: appointment?.note || \"\",\r\n      cancellationReason: appointment?.cancellationReason || \"\",\r\n    },\r\n  });\r\n\r\n  const onSubmit = async (\r\n    values: z.infer<typeof AppointmentFormValidation>\r\n  ) => {\r\n    setIsLoading(true);\r\n\r\n    let status;\r\n    switch (type) {\r\n      case \"schedule\":\r\n        status = \"scheduled\";\r\n        break;\r\n      case \"cancel\":\r\n        status = \"cancelled\";\r\n        break;\r\n      default:\r\n        status = \"pending\";\r\n    }\r\n\r\n    try {\r\n      if (type === \"create\" && patientId) {\r\n        const appointment = {\r\n          userId,\r\n          patient: patientId,\r\n          primaryPhysician: values.primaryPhysician,\r\n          schedule: new Date(values.schedule),\r\n          reason: values.reason!,\r\n          status: status as Status,\r\n          note: values.note,\r\n        };\r\n\r\n        const newAppointment = await createAppointment(appointment);\r\n\r\n        if (newAppointment) {\r\n          form.reset();\r\n          router.push(\r\n            `/patients/${userId}/new-appointment/success?appointmentId=${newAppointment.$id}`\r\n          );\r\n        }\r\n      } else {\r\n        const appointmentToUpdate = {\r\n          userId,\r\n          appointmentId: appointment?.$id!,\r\n          appointment: {\r\n            primaryPhysician: values.primaryPhysician,\r\n            schedule: new Date(values.schedule),\r\n            status: status as Status,\r\n            cancellationReason: values.cancellationReason,\r\n          },\r\n          type,\r\n        };\r\n\r\n        const updatedAppointment = await updateAppointment(appointmentToUpdate);\r\n\r\n        if (updatedAppointment) {\r\n          setOpen && setOpen(false);\r\n          form.reset();\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  let buttonLabel;\r\n  switch (type) {\r\n    case \"cancel\":\r\n      buttonLabel = \"Cancel Appointment\";\r\n      break;\r\n    case \"schedule\":\r\n      buttonLabel = \"Schedule Appointment\";\r\n      break;\r\n    default:\r\n      buttonLabel = \"Submit Apppointment\";\r\n  }\r\n\r\n  return (\r\n    <Form {...form}>\r\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"flex-1 space-y-6\">\r\n        {type === \"create\" && (\r\n          <section className=\"mb-12 space-y-4\">\r\n            <h1 className=\"header\">New Appointment</h1>\r\n            <p className=\"text-dark-700\">\r\n              Request a new appointment in 10 seconds.\r\n            </p>\r\n          </section>\r\n        )}\r\n\r\n        {type !== \"cancel\" && (\r\n          <>\r\n            <CustomFormField\r\n              fieldType={FormFieldType.SELECT}\r\n              control={form.control}\r\n              name=\"primaryPhysician\"\r\n              label=\"Doctor\"\r\n              placeholder=\"Select a doctor\"\r\n            >\r\n              {Doctors.map((doctor, i) => (\r\n                <SelectItem key={doctor.name + i} value={doctor.name}>\r\n                  <div className=\"flex cursor-pointer items-center gap-2\">\r\n                    <Image\r\n                      src={doctor.image}\r\n                      width={32}\r\n                      height={32}\r\n                      alt=\"doctor\"\r\n                      className=\"rounded-full border border-dark-500\"\r\n                    />\r\n                    <p>{doctor.name}</p>\r\n                  </div>\r\n                </SelectItem>\r\n              ))}\r\n            </CustomFormField>\r\n\r\n            <CustomFormField\r\n              fieldType={FormFieldType.DATE_PICKER}\r\n              control={form.control}\r\n              name=\"schedule\"\r\n              label=\"Expected appointment date\"\r\n              showTimeSelect\r\n              dateFormat=\"MM/dd/yyyy  -  h:mm aa\"\r\n            />\r\n\r\n            <div\r\n              className={`flex flex-col gap-6  ${type === \"create\" && \"xl:flex-row\"}`}\r\n            >\r\n              <CustomFormField\r\n                fieldType={FormFieldType.TEXTAREA}\r\n                control={form.control}\r\n                name=\"reason\"\r\n                label=\"Appointment reason\"\r\n                placeholder=\"Annual montly check-up\"\r\n                disabled={type === \"schedule\"}\r\n              />\r\n\r\n              <CustomFormField\r\n                fieldType={FormFieldType.TEXTAREA}\r\n                control={form.control}\r\n                name=\"note\"\r\n                label=\"Comments/notes\"\r\n                placeholder=\"Prefer afternoon appointments, if possible\"\r\n                disabled={type === \"schedule\"}\r\n              />\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {type === \"cancel\" && (\r\n          <CustomFormField\r\n            fieldType={FormFieldType.TEXTAREA}\r\n            control={form.control}\r\n            name=\"cancellationReason\"\r\n            label=\"Reason for cancellation\"\r\n            placeholder=\"Urgent meeting came up\"\r\n          />\r\n        )}\r\n\r\n        <SubmitButton\r\n          isLoading={isLoading}\r\n          className={`${type === \"cancel\" ? \"shad-danger-btn\" : \"shad-primary-btn\"} w-full`}\r\n        >\r\n          {buttonLabel}\r\n        </SubmitButton>\r\n      </form>\r\n    </Form>\r\n  );\r\n};\r\n","export const GenderOptions = [\"Male\", \"Female\", \"Other\"];\r\n\r\nexport const PatientFormDefaultValues = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  email: \"\",\r\n  phone: \"\",\r\n  birthDate: new Date(Date.now()),\r\n  gender: \"Male\" as Gender,\r\n  address: \"\",\r\n  occupation: \"\",\r\n  emergencyContactName: \"\",\r\n  emergencyContactNumber: \"\",\r\n  primaryPhysician: \"\",\r\n  insuranceProvider: \"\",\r\n  insurancePolicyNumber: \"\",\r\n  allergies: \"\",\r\n  currentMedication: \"\",\r\n  familyMedicalHistory: \"\",\r\n  pastMedicalHistory: \"\",\r\n  identificationType: \"Birth Certificate\",\r\n  identificationNumber: \"\",\r\n  identificationDocument: [],\r\n  treatmentConsent: false,\r\n  disclosureConsent: false,\r\n  privacyConsent: false,\r\n};\r\n\r\nexport const IdentificationTypes = [\r\n  \"Birth Certificate\",\r\n  \"Driver's License\",\r\n  \"Medical Insurance Card/Policy\",\r\n  \"Military ID Card\",\r\n  \"National Identity Card\",\r\n  \"Passport\",\r\n  \"Resident Alien Card (Green Card)\",\r\n  \"Social Security Card\",\r\n  \"State ID Card\",\r\n  \"Student ID Card\",\r\n  \"Voter ID Card\",\r\n];\r\n\r\nexport const Doctors = [\r\n  {\r\n    image: \"/assets/images/dr-green.png\",\r\n    name: \"John Green\",\r\n  },\r\n  {\r\n    image: \"/assets/images/dr-cameron.png\",\r\n    name: \"Leila Cameron\",\r\n  },\r\n  {\r\n    image: \"/assets/images/dr-livingston.png\",\r\n    name: \"David Livingston\",\r\n  },\r\n  {\r\n    image: \"/assets/images/dr-peter.png\",\r\n    name: \"Evan Peter\",\r\n  },\r\n  {\r\n    image: \"/assets/images/dr-powell.png\",\r\n    name: \"Jane Powell\",\r\n  },\r\n  {\r\n    image: \"/assets/images/dr-remirez.png\",\r\n    name: \"Alex Ramirez\",\r\n  },\r\n  {\r\n    image: \"/assets/images/dr-lee.png\",\r\n    name: \"Jasmine Lee\",\r\n  },\r\n  {\r\n    image: \"/assets/images/dr-cruz.png\",\r\n    name: \"Alyana Cruz\",\r\n  },\r\n  {\r\n    image: \"/assets/images/dr-sharma.png\",\r\n    name: \"Hardik Sharma\",\r\n  },\r\n];\r\n\r\nexport const StatusIcon = {\r\n  scheduled: \"/assets/icons/check.svg\",\r\n  pending: \"/assets/icons/pending.svg\",\r\n  cancelled: \"/assets/icons/cancelled.svg\",\r\n};\r\n","// extracted by mini-css-extract-plugin"],"names":["Promise","resolve","then","__webpack_require__","bind","t","AppointmentForm","buttonLabel","userId","patientId","type","appointment","setOpen","param","router","useRouter","isLoading","setIsLoading","useState","AppointmentFormValidation","getAppointmentSchema","form","useForm","resolver","zodResolver","defaultValues","primaryPhysician","schedule","Date","now","reason","note","cancellationReason","onSubmit","values","status","patient","newAppointment","createAppointment","reset","push","concat","$id","appointmentToUpdate","appointmentId","updateAppointment","error","console","log","jsx_runtime","jsx","Form","jsxs","handleSubmit","className","section","h1","p","Fragment","CustomFormField","fieldType","FormFieldType","SELECT","control","name","label","placeholder","Doctors","map","doctor","i","SelectItem","value","div","Image","src","image","width","height","alt","DATE_PICKER","showTimeSelect","dateFormat","TEXTAREA","disabled","SubmitButton","GenderOptions","PatientFormDefaultValues","firstName","lastName","email","phone","birthDate","gender","address","occupation","emergencyContactName","emergencyContactNumber","insuranceProvider","insurancePolicyNumber","allergies","currentMedication","familyMedicalHistory","pastMedicalHistory","identificationType","identificationNumber","identificationDocument","treatmentConsent","disclosureConsent","privacyConsent","IdentificationTypes","StatusIcon","scheduled","pending","cancelled"],"sourceRoot":""}